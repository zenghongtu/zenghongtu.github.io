{"data":{"post":{"id":"5b761581-4400-5123-8a9f-b67a869b7df2","html":"<p>想要爬取网站<a href=\"http://dir.scmor.com/google/\">http://dir.scmor.com/google/</a> 中Google镜像站的链接，一眼看去还以为简单提取一下href就好，仔细看看好像没那么简单。</p>\n<ol>\n<li>分析</li>\n</ol>\n<p>网页源码如下，点击现在访问执行visit函数，传入的字符串为base64编码。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">&lt; a href=\"javascript:;\" class=\"ok\" onclick=\"visit('DSE8WyM3DBsjQGsWNj5YXSEsEgovACEETDBXUA==')\"> 现在访问 <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>直接将该字符串base64解码得到结果如下。乱码，说明不是简单的将url经过base64编码。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token comment\">#7\f\u001b#@k\u00166>X]!,\u0012</span>\n/<span class=\"token operator\">!</span>\u0004L0WP</code></pre></div>\n<p>通过查找js文件，找到visit函数</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> newTab <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'about:blank'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Gword <span class=\"token operator\">!=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> url <span class=\"token operator\">=</span> <span class=\"token function\">strdecode</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// var newTab = window.open(url);</span>\n    newTab<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//newTab.location.reload(true);</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>通过javascript源码可以看出，将字符串经过strdecode函数处理后，即可得到真实的url。\nstrdecode函数代码如下</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">strdecode</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    string <span class=\"token operator\">=</span> <span class=\"token function\">base64decode</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    key <span class=\"token operator\">=</span> Gword<span class=\"token punctuation\">;</span>\n    len <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    code <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> string<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> k <span class=\"token operator\">=</span> i <span class=\"token operator\">%</span> len<span class=\"token punctuation\">;</span>\n        code <span class=\"token operator\">+=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">base64decode</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>通过查找，Gword的值为link@scmor.com。至此，已经了解了网址加密解密的整个过程，可以开始编写代码啦。</p>\n<ol start=\"2\">\n<li>Coding</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> time\n\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:39.0) Gecko/20100101 Firefox/39.0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Accept-Language'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'en-US,en;q=0.5'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Accept-Encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gzip, deflate'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Connection'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'keep-alive'</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_encoded_urls</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    html<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'http://dir.scmor.com/google/'</span><span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'\\r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>'\n<span class=\"token string\">','</span><span class=\"token string\">').replace('</span> <span class=\"token string\">','</span>'<span class=\"token punctuation\">)</span>\n    encoded_urls<span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">'autourl\\[\\d+\\]=\"(.*?)\";'</span><span class=\"token punctuation\">,</span>html<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> encoded_urls\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">from_char_code</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">unichr</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">%</span><span class=\"token number\">65536</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">unichr</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">65536</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">%</span><span class=\"token number\">65536</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">65536</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    string<span class=\"token operator\">=</span>base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n    key<span class=\"token operator\">=</span><span class=\"token string\">'link@scmor.com'</span>\n    length<span class=\"token operator\">=</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n    code<span class=\"token operator\">=</span><span class=\"token string\">''</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        k<span class=\"token operator\">=</span>i<span class=\"token operator\">%</span>length\n        code<span class=\"token operator\">+=</span>from_char_code<span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    result<span class=\"token operator\">=</span>base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> result\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">write_to_txt</span><span class=\"token punctuation\">(</span>urls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    f<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'result.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> url <span class=\"token keyword\">in</span> urls<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span>'\n'<span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">crawl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    encoded_urls<span class=\"token operator\">=</span>get_encoded_urls<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    urls<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> string <span class=\"token keyword\">in</span> encoded_urls<span class=\"token punctuation\">:</span>\n        url<span class=\"token operator\">=</span>decode<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span>\n        urls<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n    write_to_txt<span class=\"token punctuation\">(</span>urls<span class=\"token punctuation\">)</span>\n\ncrawl<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","fields":{"slug":"/破解某网站url加密/","prefix":"2017-08-15"},"frontmatter":{"title":"破解某网站url加密","author":"Jason Zeng","category":"爬虫","cover":{"childImageSharp":{"resize":{"src":"/static/4a088342b51ed3e0faaae41e857e5911/ada8c/cat2.jpg"}}}}},"authornote":{"id":"eeaf3f36-861e-5339-a4a4-e63a63ccd23c","html":"<p><a href=\"https://github.com/zenghongtu\">Jason Zeng</a></p>"},"site":{"siteMetadata":{"facebook":{"appId":"2349655921921608"}}}},"pageContext":{"slug":"/破解某网站url加密/","prev":{"id":"99bf69d6-7373-5a50-9b76-129feadbc6dc","fields":{"slug":"/PIL生成验证码/","prefix":"2017-07-28","source":"posts"},"frontmatter":{"title":"PIL生成验证码","category":"PIL"}},"next":{"id":"dab9e6f3-6070-5638-a316-7db0ad54a1b8","fields":{"slug":"/Docker 简单使用/","prefix":"2017-11-25","source":"posts"},"frontmatter":{"title":"Docker 简单使用","category":"Docker"}},"source":"posts"}}