{"data":{"post":{"id":"6ff48c06-18bc-5498-a6cb-0789c958c929","html":"<p>title: PIL生成验证码\nauthor: 大图\ntags:</p>\n<ul>\n<li>\n<p>PIL</p>\n</li>\n<li>\n<p>验证码\ncategories:</p>\n</li>\n<li>\n<p>笔记\ndate: 2017-07-28 15:06:00</p>\n<hr>\n<p>PIL 生成验证码为了防止程序恶意请求，使用图片验证码是最常见的手段。</p>\n</li>\n<li>\n<p>PIL\nPIL 是一个非常强大的图像处理库，这里我们使用 PIL 来生成图片验证码安装 PIL</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pip install Pillow</code></pre></div>\n<p>Windows 下可以直接到官网下载 exe 安装包</p>\n<ol start=\"2\">\n<li>绘制字符</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#随机生成RGB颜色\ndef randcolor():\n    return (random.randint(64, 255), random.randint(64, 255), random.randint(64, 255))\n\ndef randcolor_2():\n    return (random.randint(32, 127), random.randint(32, 127), random.randint(32, 127))\n\n#随机生成1-20内的加减乘算数表达式，并绘制\nsize=(160,50)\nfirstnum=random.randint(1,20)\nsecondnum=random.randint(1,20)\noperator=random.choice(&#39;+-*&#39;)\nverifystr=str(firstnum)+operator+str(secondnum)\nresult=eval(verifystr)#验证码结果\nimg=Image.new(&#39;RGB&#39;,size, (255,255,255))\ndraw=ImageDraw.Draw(img)\nfont=ImageFont.truetype(&#39;DejaVuSerif-Bold.ttf&#39;,36)\nverifystr+=&#39;=?&#39;\nfor index in range(len(verifystr)):\n    draw.text((10+20*index,10),text=verifystr[index],font=font,fill=randcolor_2())\nimg=img.filter(ImageFilter.CONTOUR)#模糊</code></pre></div>\n<ol start=\"3\">\n<li>绘制干扰线，干扰点</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">def create_lines(draw,size):\n    line_num=random.randint(5,8)#干扰线数目\n    for num in range(line_num):\n        begin=(random.randint(0,size[0]),random.randint(0,size[1]))#起始点\n        end=(random.randint(0,size[0]),random.randint(0,size[1]))#结束点\n        draw.line([begin,end],fill=randcolor_2())#绘制\n    return draw\n\ndef create_points(draw,size):\n    point_num=random.randint(200,400)#干扰点数目\n    while point_num:\n        w=random.randint(0,size[0])\n        h=random.randint(0,size[1])\n        draw.point((w,h),fill=randcolor())\n        point_num-=1\n    return draw</code></pre></div>\n<ol start=\"4\">\n<li>在 Django 中加入验证码模块生成的验证码可以不用保存到本地再显示，这里我们使用 Python 的 io 模块</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">from io import BytesIO\nfrom verify import create_verifycode\n\ndef verifycode(request):\n    img,code=create_verifycode()#生成验证码\n    mstream =BytesIO()\n    request.session[&#39;verifycode&#39;]=code#将验证码的结果保存在session中，当用户提交时，与session中的结果比较\n    img.save(mstream, &quot;jpeg&quot;)\n    return HttpResponse(mstream.getvalue(),content_type=&quot;image/jpeg&quot;)</code></pre></div>","fields":{"slug":"/PIL生成验证码/","prefix":null},"frontmatter":{"title":"","author":null,"category":null,"cover":null}},"authornote":{"id":"f3ffdeef-a16f-507d-9f2f-98fa5e045d0b","html":"<p><strong>Mr. Gatsby</strong> Proin ornare ligula eu tellus tempus elementum. Aenean <a href=\"/\">bibendum</a> iaculis mi, nec blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus. Blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus.</p>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pageContext":{"slug":"/PIL生成验证码/","next":{"id":"d60f890f-a61e-5917-be96-b5e5727c2342","fields":{"slug":"/git删除错误提交的commit/","prefix":null,"source":"posts"},"frontmatter":{"title":"","category":null}},"source":"posts"}}