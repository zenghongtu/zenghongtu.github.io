{"data":{"post":{"id":"2a2f6e49-4eab-5bc6-b9ea-2b168e79c943","html":"<p>title: python网络爬虫之人人贷散标数据抓取\nauthor: 大图\ntags:</p>\n<ul>\n<li>python\ncategories:</li>\n<li>\n<p>爬虫\ndate: 2017-05-16 15:04:00</p>\n<hr>\n</li>\n<li>登录\n借款人的详细信息需要登录后才能查看，因此爬虫需要模拟登录</li>\n</ul>\n<p>Cookie登录\n直接获取登录后的cookie填入请求的headers中</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cookie<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token comment\">#填写cookie</span>\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:39.0) Gecko/20100101 Firefox/39.0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Accept-Language'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'en-US,en;q=0.5'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Cookie'</span><span class=\"token punctuation\">:</span>cookie<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Accept-Encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gzip, deflate'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Connection'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'keep-alive'</span><span class=\"token punctuation\">}</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span>post登录\n <span class=\"token keyword\">def</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n     session<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n     data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n         <span class=\"token string\">'j_username'</span><span class=\"token punctuation\">:</span>username<span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'j_password'</span><span class=\"token punctuation\">:</span>password<span class=\"token punctuation\">,</span><span class=\"token comment\">#password是加密后的</span>\n         <span class=\"token string\">'rememberme'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'on'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'targetUrl'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'http://www.we.com/'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'returnUrl'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'https://www.we.com/account/index.action'</span><span class=\"token punctuation\">}</span>\n    session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.we.com/j_spring_security_check'</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> session</code></pre></div>\n<ol start=\"2\">\n<li>\n<p>抓取\n散标的链接是：<a href=\"http://www.we.com/loan/2071082\">http://www.we.com/loan/2071082</a> ,每一个标对应一个id,改变id就可以获取到不同的标\n目前人人贷上id的范围从1-808500,2000001-2071082,因此可以编写一个循环来获取所有的标</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\nid_from<span class=\"token operator\">=</span><span class=\"token number\">2007050</span><span class=\"token comment\">#起始id</span>\nid_to<span class=\"token operator\">=</span><span class=\"token number\">2008550</span><span class=\"token comment\">#结束id</span>\n<span class=\"token keyword\">for</span> load_id <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>id_from<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>id_to<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        items<span class=\"token operator\">=</span>get_page<span class=\"token punctuation\">(</span><span class=\"token string\">'http://www.we.com/loan/'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>load_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#获取标的信息</span>\n    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        failed_f<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'failed.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#失败则写入failed</span>\n        failed_f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>load_id<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>'\n'<span class=\"token punctuation\">)</span>\n        failed_f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>load_id<span class=\"token punctuation\">,</span><span class=\"token string\">'failed'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">continue</span>\n    items<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>load_id<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>load_id<span class=\"token punctuation\">,</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span>\n    write_to_text<span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">)</span><span class=\"token comment\">#写入文件</span></code></pre></div>\n</li>\n</ol>\n<p>def write<em>to</em>text(items):#写入文件\ntext<em>f=open(‘result.txt’,‘a’)\ntext=”\nfor key in keys:\ntext+=items[key].replace(’ ’,”)+’ ||’\ntext</em>f.write(text+’\n’)\ntext_f.close()</p>\n<p>def get_page(url):#获取页面并解析\nhtml=requests.get(url,headers=headers).text\ninfor=parser(html)\nreturn infor</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">3. 解析\n使用BeautifulSoup4，lxml解析网页，解析程序是根据网页编写的，要看懂代码需要结合网页\n```python\ndef parser(html):\n    soup=BeautifulSoup(html,&#39;lxml&#39;).find(&#39;div&#39;,id=&#39;pg-loan-invest&#39;)\n    infor_one=soup.find(&#39;div&#39;,id=&#39;loan-basic-panel&#39;)\n    infor={}\n    infor[&#39;Loan_type&#39;]=infor_one.find(&#39;div&#39;,attrs={&#39;class&#39;:&#39;fn-left fn-text-overflow pl25&#39;}).get(&#39;title&#39;)\n    infor[&#39;Loan_Title&#39;]=infor_one.find(&#39;em&#39;,attrs={&#39;class&#39;:&#39;title-text&#39;}).get_text()\n    em=infor_one.find(&#39;div&#39;,attrs={&#39;class&#39;:&#39;fn-clear&#39;}).find_all(&#39;em&#39;)\n    infor[&#39;Amount&#39;]=em[0].get_text()\n    infor[&#39;Interest_Rate&#39;]=em[1].get_text()\n    infor[&#39;Term&#39;]=em[3].get_text()\n    ul=infor_one.find(&#39;div&#39;,attrs={&#39;class&#39;:&#39;fn-left pt10 loaninfo &#39;}).find(&#39;ul&#39;).find_all(&#39;li&#39;)\n    infor[&#39;Guarantee_Type&#39;]=ul[0].find(&#39;span&#39;,attrs={&#39;class&#39;:&#39;fn-left basic-value last&#39;}).get_text()\n    infor[&#39;Early_Repayment_Rate&#39;]=ul[0].find(&#39;span&#39;,attrs={&#39;class&#39;:&#39;fn-left basic-value num&#39;}).get_text()\n    infor[&#39;Repayment_Type&#39;]=ul[1].find(&#39;span&#39;,attrs={&#39;class&#39;:&#39;fn-left basic-value&#39;}).get_text()\n    statue=infor_one.find(&#39;div&#39;,attrs={&#39;class&#39;:&#39;pl25 pr25 fn-clear&#39;}).find(&#39;div&#39;,attrs={&#39;class&#39;:&#39;stamp&#39;}).find(&#39;em&#39;).get(&#39;class&#39;)\n    infor[&#39;Loan_Status&#39;]=statue[0]\n    if statue==[&#39;REPAYING&#39;]:\n        infor[&#39;Term_Remain&#39;]=infor_one.find(&#39;div&#39;,attrs={&#39;class&#39;:&#39;pl25 pr25 fn-clear&#39;}).find(&#39;div&#39;,attrs={&#39;class&#39;:&#39;box box-top&#39;}).find(&#39;i&#39;).get_text()\n        infor[&#39;Next_Payment_Day&#39;]=infor_one.find(&#39;div&#39;,attrs={&#39;class&#39;:&#39;pl25 pr25 fn-clear&#39;}).find(&#39;div&#39;,attrs={&#39;class&#39;:&#39;box box-bottom&#39;}).find(&#39;i&#39;).get_text()\n    else:\n        infor[&#39;Term_Remain&#39;]=&#39;&#39;\n        infor[&#39;Next_Payment_Day&#39;]=&#39;&#39;\n    table=soup.find(&#39;div&#39;,id=&#39;loan-details&#39;).find(&#39;table&#39;,attrs={&#39;class&#39;:&#39;ui-table-basic-list&#39;}).find_all(&#39;tr&#39;)\n    infor[&#39;Borrower_Id&#39;]=table[0].find(&#39;em&#39;).get_text()\n    infor[&#39;Userid&#39;]=table[0].find(&#39;em&#39;).find(&#39;a&#39;).get(&#39;href&#39;).replace(&#39;/account/myInfo.action?userId=&#39;,&#39;&#39;)\n    infor[&#39;Credit_Score&#39;]=table[0].find_all(&#39;em&#39;)[1].get(&#39;title&#39;)\n    infor[&#39;Des&#39;]=soup.find(&#39;div&#39;,attrs={&#39;class&#39;:&#39;ui-tab-list color-dark-text&#39;}).get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    em=table[2].find_all(&#39;em&#39;)\n    infor[&#39;Age&#39;]=em[0].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    infor[&#39;Education&#39;]=em[1].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    infor[&#39;Marital status&#39;]=em[2].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    em=table[4].find_all(&#39;em&#39;)\n    infor[&#39;Number_of_Borrow&#39;]=em[0].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    infor[&#39;Credit_Limit&#39;]=em[1].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    infor[&#39;Overdue_amount&#39;]=em[2].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    em=table[5].find_all(&#39;em&#39;)\n    infor[&#39;Number_of_Succesful_Loan&#39;]=em[0].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    infor[&#39;Total_Amount&#39;]=em[1].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    infor[&#39;Number_Arrears&#39;]=em[2].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    em=table[6].find_all(&#39;em&#39;)\n    infor[&#39;Number_of_Repaid&#39;]=em[0].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    infor[&#39;Outstanding&#39;]=em[1].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    infor[&#39;Severe_overdue&#39;]=em[2].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    em=table[8].find_all(&#39;em&#39;)\n    infor[&#39;Income_Range_Monthly&#39;]=em[0].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    infor[&#39;Homeowner&#39;]=em[1].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    infor[&#39;Mortgage&#39;]=em[2].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    em=table[9].find_all(&#39;em&#39;)\n    infor[&#39;Car&#39;]=em[0].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    infor[&#39;Car_Loan&#39;]=em[1].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    em=table[11].find_all(&#39;em&#39;)\n    infor[&#39;Working_City&#39;]=em[0].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    infor[&#39;Emploment_Length&#39;]=em[1].get_text().replace(&#39;\n&#39;,&#39;&#39;).replace(&#39;\\t&#39;,&#39;&#39;)\n    for item in soup.find(&#39;div&#39;,id=&#39;loan-details&#39;).find(&#39;table&#39;,attrs={&#39;class&#39;:&#39;ui-table-basic-list&#39;}).find_all(&#39;td&#39;):\n        if item.get_text()[:4]==u&#39;公司行业&#39;:\n            infor[&#39;Employment_Sector&#39;]=item.find(&#39;em&#39;).get_text()\n        if item.get_text()[:4]==u&#39;公司规模&#39;:\n            infor[&#39;Company_Scale&#39;]=item.find(&#39;em&#39;).get_text()\n        if item.get_text()[:4]==u&#39;岗位职位&#39;:\n            infor[&#39;Position&#39;]=item.find(&#39;em&#39;).get_text()\n    return infor</code></pre></div>\n<ol start=\"4\">\n<li>\n<p>完整代码</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#coding:utf-8</span></code></pre></div>\n</li>\n</ol>\n<p>import requests\nfrom bs4 import BeautifulSoup</p>\n<p>Cookie=\"\"\nheaders = {\n‘User-Agent’: ‘Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:39.0) Gecko/20100101 Firefox/39.0’,\n‘Accept’: ‘text/html,application/xhtml+xml,application/xml;q=0.9,<em>/</em>;q=0.8’,\n‘Accept-Language’: ‘en-US,en;q=0.5’,\n‘Cookie’:Cookie,\n‘Accept-Encoding’: ‘gzip, deflate’,\n‘Connection’: ‘keep-alive’}</p>\n<p>keys=[‘id’,‘Loan<em>Title’,‘Loan</em>type’, ‘Loan<em>Status’,‘Amount’, ‘Interest</em>Rate’, ‘Term’,‘Next<em>Payment</em>Day’,‘Term<em>Remain’, ‘Repayment</em>Type’,‘Des’,‘Guarantee<em>Type’,‘Early</em>Repayment<em>Rate’,\n‘Borrower</em>Id’,‘Userid’,‘Age’,‘Education’,  ‘Marital status’,‘Working<em>City’,‘Company</em>Scale’,‘Position’,‘Employment<em>Sector’, ‘Emploment</em>Length’,‘Homeowner’, ‘Mortgage’, ‘Car’, ‘Car<em>Loan’,\n‘Total</em>Amount’,‘Number<em>of</em>Succesful<em>Loan’, ‘Income</em>Range<em>Monthly’, ‘Number</em>of<em>Borrow’, ‘Number</em>of<em>Repaid’, ‘Outstanding’,‘Overdue</em>amount’,‘Severe<em>overdue’,‘Credit</em>Score’,  ‘Number<em>Arrears’, ‘Credit</em>Limit’]</p>\n<p>def write<em>to</em>text(items):\ntext<em>f=open(‘result.txt’,‘a’,encoding=‘utf-8’)\ntext=”\nfor key in lists:\ntext+=items[key].replace(’ ’,”)+’ ||’\ntext</em>f.write(text+’\n’)\ntext_f.close()</p>\n<p>def get_page(url):\nhtml=requests.get(url,headers=headers).text\ninfor=parser(html)\nreturn infor</p>\n<p>def parser(html):\nsoup=BeautifulSoup(html,‘lxml’).find(‘div’,id=‘pg-loan-invest’)\ninfor<em>one=soup.find(‘div’,id=‘loan-basic-panel’)\ninfor={}\ninfor[‘Loan</em>type’]=infor<em>one.find(‘div’,attrs={‘class’:‘fn-left fn-text-overflow pl25’}).get(‘title’)\ninfor[‘Loan</em>Title’]=infor<em>one.find(‘em’,attrs={‘class’:‘title-text’}).get</em>text()\nem=infor<em>one.find(‘div’,attrs={‘class’:‘fn-clear’}).find</em>all(‘em’)\ninfor[‘Amount’]=em[0].get<em>text()\ninfor[‘Interest</em>Rate’]=em[1].get<em>text()\ninfor[‘Term’]=em[3].get</em>text()\nul=infor<em>one.find(‘div’,attrs={‘class’:‘fn-left pt10 loaninfo ’}).find(‘ul’).find</em>all(‘li’)\ninfor[‘Guarantee_Type’]=ul[0].find(‘span’,attrs={‘class’:‘fn-left basic-value last’}).get<em>text()\ninfor[‘Early</em>Repayment<em>Rate’]=ul[0].find(‘span’,attrs={‘class’:‘fn-left basic-value num’}).get</em>text()\ninfor[‘Repayment_Type’]=ul[1].find(‘span’,attrs={‘class’:‘fn-left basic-value’}).get<em>text()\nstatue=infor</em>one.find(‘div’,attrs={‘class’:‘pl25 pr25 fn-clear’}).find(‘div’,attrs={‘class’:‘stamp’}).find(‘em’).get(‘class’)\ninfor[‘Loan_Status’]=statue[0]\nif statue==[‘REPAYING’]:\ninfor[‘Term_Remain’]=infor<em>one.find(‘div’,attrs={‘class’:‘pl25 pr25 fn-clear’}).find(‘div’,attrs={‘class’:‘box box-top’}).find(‘i’).get</em>text()\ninfor[‘Next<em>Payment</em>Day’]=infor<em>one.find(‘div’,attrs={‘class’:‘pl25 pr25 fn-clear’}).find(‘div’,attrs={‘class’:‘box box-bottom’}).find(‘i’).get</em>text()\nelse:\ninfor[‘Term_Remain’]=”\ninfor[‘Next<em>Payment</em>Day’]=”\ntable=soup.find(‘div’,id=‘loan-details’).find(‘table’,attrs={‘class’:‘ui-table-basic-list’}).find<em>all(‘tr’)\ninfor[‘Borrower</em>Id’]=table[0].find(‘em’).get<em>text()\ninfor[‘Userid’]=table[0].find(‘em’).find(‘a’).get(‘href’).replace(‘/account/myInfo.action?userId=’,”)\ninfor[‘Credit</em>Score’]=table[0].find<em>all(‘em’)[1].get(‘title’)\ninfor[‘Des’]=soup.find(‘div’,attrs={‘class’:‘ui-tab-list color-dark-text’}).get</em>text().replace(’\n’,”).replace(‘\\t’,”)\nem=table[2].find<em>all(‘em’)\ninfor[‘Age’]=em[0].get</em>text().replace(’\n’,”).replace(‘\\t’,”)\ninfor[‘Education’]=em[1].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\ninfor[‘Marital status’]=em[2].get</em>text().replace(’\n’,”).replace(‘\\t’,”)\nem=table[4].find<em>all(‘em’)\ninfor[‘Number</em>of<em>Borrow’]=em[0].get</em>text().replace(’\n’,”).replace(‘\\t’,”)\ninfor[‘Credit_Limit’]=em[1].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\ninfor[‘Overdue</em>amount’]=em[2].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\nem=table[5].find</em>all(‘em’)\ninfor[‘Number<em>of</em>Succesful_Loan’]=em[0].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\ninfor[‘Total</em>Amount’]=em[1].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\ninfor[‘Number</em>Arrears’]=em[2].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\nem=table[6].find</em>all(‘em’)\ninfor[‘Number<em>of</em>Repaid’]=em[0].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\ninfor[‘Outstanding’]=em[1].get</em>text().replace(’\n’,”).replace(‘\\t’,”)\ninfor[‘Severe_overdue’]=em[2].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\nem=table[8].find</em>all(‘em’)\ninfor[‘Income<em>Range</em>Monthly’]=em[0].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\ninfor[‘Homeowner’]=em[1].get</em>text().replace(’\n’,”).replace(‘\\t’,”)\ninfor[‘Mortgage’]=em[2].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\nem=table[9].find</em>all(‘em’)\ninfor[‘Car’]=em[0].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\ninfor[‘Car</em>Loan’]=em[1].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\nem=table[11].find</em>all(‘em’)\ninfor[‘Working_City’]=em[0].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\ninfor[‘Emploment</em>Length’]=em[1].get<em>text().replace(’\n’,”).replace(‘\\t’,”)\nfor item in soup.find(‘div’,id=‘loan-details’).find(‘table’,attrs={‘class’:‘ui-table-basic-list’}).find</em>all(‘td’):\nif item.get<em>text()[:4]==u’公司行业’:\ninfor[‘Employment</em>Sector’]=item.find(‘em’).get<em>text()\nif item.get</em>text()[:4]==u’公司规模’:\ninfor[‘Company_Scale’]=item.find(‘em’).get<em>text()\nif item.get</em>text()[:4]==u’岗位职位’:\ninfor[‘Position’]=item.find(‘em’).get_text()\nreturn infor</p>\n<p>def main():\nid<em>from=2007050#起始id\nid</em>to=2008550#结束id\nfor load<em>id in range(int(id</em>from),int(id<em>to)+1):\ntry:\nitems=get</em>page(’<a href=\"http://www.we.com/loan/&#x27;+str(load_id)\">http://www.we.com/loan/‘+str(load_id)</a>)\nexcept:\nfailed<em>f=open(‘failed.txt’,‘a’,encoding=‘utf-8’)\nfailed</em>f.write(str(load<em>id)+’\n’)\nfailed</em>f.close()\nprint(load<em>id,‘failed’)\ncontinue\nitems[‘id’]=str(load</em>id)\nprint(load<em>id,‘ok’)\nwrite</em>to_text(items)</p>\n<p>if <strong>name</strong>==’<strong>main</strong>’:\nmain()</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">5. 运行环境\n需要安装BeautifulSoup4,requests,lxml这三个第三方库\nBeautifulSoup4和requests可以直接使用命令安装</code></pre></div>\n<p>pip install bs4\npip install requests</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","fields":{"slug":"/python网络爬虫之人人贷散标数据抓取/","prefix":null},"frontmatter":{"title":"","author":null,"category":null,"cover":null}},"authornote":{"id":"f3ffdeef-a16f-507d-9f2f-98fa5e045d0b","html":"<p><strong>Mr. Gatsby</strong> Proin ornare ligula eu tellus tempus elementum. Aenean <a href=\"/\">bibendum</a> iaculis mi, nec blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus. Blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus.</p>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pageContext":{"slug":"/python网络爬虫之人人贷散标数据抓取/","prev":{"id":"0abb1333-d6ee-5c4c-9033-991ceba9cd3d","fields":{"slug":"/Python网络爬虫之代理IP/","prefix":null,"source":"posts"},"frontmatter":{"title":"","category":null}},"next":{"id":"b7bebbca-c603-5df5-baf9-40abb5db6450","fields":{"slug":"/python爬虫技能树总结/","prefix":null,"source":"posts"},"frontmatter":{"title":"","category":null}},"source":"posts"}}