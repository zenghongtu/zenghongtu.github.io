{"data":{"post":{"id":"867c0a75-ead9-5770-9baf-fa791b246d7b","html":"<p>title: python网络爬虫之动态页面\nauthor: 大图\ntags:</p>\n<ul>\n<li>python</li>\n<li>动态页面\ncategories:</li>\n<li>\n<p>爬虫\ndate: 2017-03-25 14:53:00</p>\n<hr>\n<p>抓取静态网页，可以直接通过requests获取页面，再分析网页提取信息，但是目前很多网站所显示的内容往往不是通过HTML页面呈现的，而是通过调用js等方式从数据库中得到数据，回显到网页上。对于这种动态网页，就不能简单地获取html提取到数据了。</p>\n</li>\n</ul>\n<p>对于一些简单的动态网页，可以通过抓包获取到请求的链接，修改参数，获取到数据，但是一些复杂的动态网页，加入了很多验证参数，比如淘宝上的商品评论，若是通过上面所说的方式，构造参数爬取，做起来就很麻烦，这时候就可以调用浏览器来抓取，复杂的js，全部交给浏览器处理，我们只需要控制好浏览器的行为就行。</p>\n<p>接下来，我来介绍一下这两种方式。</p>\n<ol>\n<li>构造参数抓取动态页面\n还是以知乎为例，搜索知乎上的话题，结果就是动态加载的，点击更多，页面就加载下一页的数据。</li>\n</ol>\n<p>抓包分析:\n搜索结果是GET获取的，修改offset参数，可以获取到另些页的数据，修改q,可以获取其他搜索词的结果，返回的是json数据，利用Python的json模块，我们可以很好地处理数据</p>\n<p>构造参数，获取数据\n知乎的模拟登录，可以参考之前的文章 Python网络爬虫之模拟登录</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> json\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"Accept\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Accept-Encoding\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"gzip, deflate\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Accept-Language\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"en-US,en;q=0.5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Connection\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"keep-alive\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"User-Agent\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:39.0) Gecko/20100101 Firefox/39.0\"</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_list</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    html<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.zhihu.com/r/search?q=%s&amp;type=content&amp;offset=%s'</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n    result<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> result\n\nresult<span class=\"token operator\">=</span>get_list<span class=\"token punctuation\">(</span><span class=\"token string\">'知乎'</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"2\">\n<li>调用浏览器抓取动态网页\n对于一些参数比较复杂的动态网页，构造参数抓取费事费力，很是麻烦，对于这种情况，我们可以直接调用浏览器来获取页面。Python有很多类库，Ghost .py，selenium等，这里我讲解一下如何使用selenium来抓取动态网页。</li>\n</ol>\n<p>简单的对象定位\nselenium的webdriver提供了多种方式定位元素，常用的如下</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfind_element_by_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfind_element_by_class_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfind_element_by_tag_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfind_element_by_link_text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfind_element_by_partial_link_text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfind_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfind_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>操作测试对象</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">clear 清除元素的内容,如果可以的话\nsend_keys 在元素上模拟按键输入\nclick 单击元素\nsubmit 提交表单</code></pre></div>\n<p>下面以126邮箱登录实例来展示常见元素操作的使用</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\nbrowser<span class=\"token operator\">=</span>webdriver<span class=\"token punctuation\">.</span>Firefox<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nbrowser<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'http://www.126.com/'</span><span class=\"token punctuation\">)</span>\nbrowser<span class=\"token punctuation\">.</span>find_element_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nbrowser<span class=\"token punctuation\">.</span>find_element_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">)</span>\nbrowser<span class=\"token punctuation\">.</span>find_element_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">)</span>\nbrowser<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">'dologin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>获取页面信息</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">browser.page_source #获取页面源码\nbrowser.title #获取title\nbrowser.current_url #获取当前页面链接\nbrowser.find_element_by_id(&#39;id&#39;).text #获取元素文本信息</code></pre></div>\n<p>对于selenium详细的使用,读者可以查看selenium的文档</p>","fields":{"slug":"/python网络爬虫之动态网络/","prefix":null},"frontmatter":{"title":"","author":null,"category":null,"cover":null}},"authornote":{"id":"f3ffdeef-a16f-507d-9f2f-98fa5e045d0b","html":"<p><strong>Mr. Gatsby</strong> Proin ornare ligula eu tellus tempus elementum. Aenean <a href=\"/\">bibendum</a> iaculis mi, nec blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus. Blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus.</p>"},"site":{"siteMetadata":{"facebook":{"appId":""}}}},"pageContext":{"slug":"/python网络爬虫之动态网络/","prev":{"id":"2644b8a2-79d5-54ab-8f16-67e807b09be7","fields":{"slug":"/Python网络爬虫之网易云阅读/","prefix":null,"source":"posts"},"frontmatter":{"title":"","category":null}},"next":{"id":"0abb1333-d6ee-5c4c-9033-991ceba9cd3d","fields":{"slug":"/Python网络爬虫之代理IP/","prefix":null,"source":"posts"},"frontmatter":{"title":"","category":null}},"source":"posts"}}