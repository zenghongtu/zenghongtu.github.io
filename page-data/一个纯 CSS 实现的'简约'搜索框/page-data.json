{"componentChunkName":"component---src-templates-post-template-js","path":"/一个纯 CSS 实现的'简约'搜索框/","webpackCompilationHash":"c350e791ebf0e69a7acf","result":{"data":{"post":{"id":"ccb1c8e5-d57d-5b38-a349-adb783458ffa","html":"<blockquote>\n<p>这几天在尝试用<code class=\"language-text\">electron</code>来做一个桌面端的词典，装了 n 个词典来参(chao)考(xi)一下交互。感觉金山词霸的搜索框用起来’都挺好’，用 JS 来实现很简单，但我们稍微挑战一下，用纯 CSS 来实现一个。</p>\n</blockquote>\n<p>首先来看一下效果：</p>\n<p><img src=\"_v_images/20190405185107197_1118589418.gif\" alt=\"Kapture 2019-04-05 at 18\"></p>\n<p>在线地址：<a href=\"https://codesandbox.io/s/xlm6mq58p4\">https://codesandbox.io/s/xlm6mq58p4</a></p>\n<h2>需求分析</h2>\n<p>从交互中可以获取到以下信息：</p>\n<ol>\n<li>默认情况下搜索 icon 居中</li>\n</ol>\n<p>这个很 easy，我们有多达五六七八种方法实现。</p>\n<p>不过我们这里考虑到需要对 icon 进行滑动，使用万金油式的<code class=\"language-text\">position: absolution + transform</code>来实现。</p>\n<ol start=\"2\">\n<li>点击它会滑动到左侧，输入框获取焦点，并出现 placeholder</li>\n</ol>\n<p>滑动效果我们可以通过伪类<code class=\"language-text\">:focus</code>来获取点击，配上<code class=\"language-text\">transition</code>，再修改<code class=\"language-text\">left</code>值即可实现。</p>\n<p>难点在于 placeholder 的显示，在未点击之前需要把它隐藏起来。但还好我们有好几个用来隐藏元素的 css 属性，常见的有<code class=\"language-text\">display: none</code>、<code class=\"language-text\">opacity: 0</code>、<code class=\"language-text\">visiblity: hidden</code>等。我们用一个更简单的<code class=\"language-text\">color:transparent;</code>就可以了。</p>\n<ol start=\"3\">\n<li>在输入文字后会显示清除 icon</li>\n</ol>\n<p>这里我们啥也不用干，直接使用<code class=\"language-text\">type=&quot;search&quot;</code>时 input 自带的清除 icon</p>\n<ol start=\"4\">\n<li>在清除文字后，如果失去焦点搜索 icon 会居中</li>\n</ol>\n<p>这个我们啥也不用干，在失去焦点后，icon 会自动居中</p>\n<p><strong>看起来似乎就这么轻松的实现了，是不是真的这样呢，让我们把代码写下来看看</strong></p>\n<h2>实现需求</h2>\n<p>我们来一个一个实现：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// ...\nfunction App() {\n  return (\n    &lt;div className={styles.container}&gt;\n      &lt;input\n        className={styles.searchInput}\n        placeholder={&quot;查单词&quot;}\n        type=&quot;text&quot;\n      /&gt;\n      &lt;div className={styles.searchIcon}&gt;\n        &lt;SearchIcon /&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n}\n// ...</code></pre></div>\n<ol>\n<li>默认情况下搜索 icon 居中</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.container {\n  position: relative;\n  padding:0;\n  height:38px;\n  width:400px;\n  font-size:16px;\n\n  .searchInput{\n    width:100%;\n    height:100%;\n    padding:0 38px;\n    box-sizing: border-box;\n    border-radius: 20px;\n    outline:none;\n    border:none;\n  }\n  .searchIcon{\n    position: absolute;\n    left:50%;\n    top:50%;\n    transform: translate(-50%,-50%);\n  }\n}</code></pre></div>\n<ol start=\"2\">\n<li>点击它会滑动到左侧，并出现 placeholder</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.container {\n  position: relative;\n  padding:0;\n  height:38px;\n  width:400px;\n  font-size:16px;\n\n  .searchInput{\n    width:100%;\n    height:100%;\n    padding:0 38px;\n    box-sizing: border-box;\n    border-radius: 20px;\n    outline:none;\n    border:none;\n\n    &amp;::placeholder {\n      transition:all ease-in .5s;\n      color:transparent;\n    }\n    &amp;:focus{\n      &amp;::placeholder{\n        color:#111;\n      }\n      &amp; + .searchIcon{\n        left:25px;\n      }\n    }\n  }\n  .searchIcon{\n    position: absolute;\n    left:50%;\n    top:50%;\n    transform: translate(-50%,-50%);\n    transition: left ease-out .5s;\n  }\n}</code></pre></div>\n<ol start=\"3\">\n<li>\n<p>在输入文字后会显示清除 icon\n啥也不用做</p>\n</li>\n<li>\n<p>在清除文字后，如果失去焦点搜索 icon 会回到中间\n啥也不用做</p>\n</li>\n</ol>\n<p>让我们来看一下效果：</p>\n<p><img src=\"_v_images/20190405182233230_11448089.gif\" alt=\"Kapture 2019-04-05 at 18\"></p>\n<h3>发现问题</h3>\n<p>好像基本实现了，但是，当我们文字没有被清除却失去了焦点，是怎么样呢？</p>\n<p><img src=\"_v_images/20190405182820684_1498231301.gif\" alt=\"Kapture 2019-04-05 at 18\"></p>\n<p>可以发现，存在一个问题就是当文字没有被清除，icon 还是会回到中间位置，而且还有一个问题就是点击输入框如果是在图标上会被遮住，无法让输入框获取焦点。</p>\n<h3>解决问题</h3>\n<p>首先我们来解决输入框没有被清除，icon 回位置的问题。</p>\n<p>如果我们能判断输入框中还存在文字就可以不让 icon 回去，但是在 input 中并没有存在可以检测是否为空的属性或伪类（:empty 在 input 为 search 时用不了）。似乎在这里就是走进死胡同了，我们尝试看一下有没有其他属性或者伪类可以用的上的。</p>\n<p>上 MDN 翻一下发现还当真有一个 — ·:placeholder-shown·属性可以判断·placeholder·是否显示，通过它可以间接判断输入框是否失去焦点。</p>\n<p>加上这一段</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">   &amp;:not(:placeholder-shown){\n      &amp; + .searchIcon{\n        left:25px;\n      }\n    }</code></pre></div>\n<p>对于icon 遮挡问题，我们直接用 <code class=\"language-text\">pointer-events: none;</code>轻松解决。</p>\n<p>让我们再测试一下，没有啥问题，搞定！</p>\n<p><img src=\"_v_images/20190405184552732_1194162492.gif\" alt=\"Kapture 2019-04-05 at 18\"></p>","fields":{"slug":"/一个纯 CSS 实现的'简约'搜索框/","prefix":"2019-04-05"},"frontmatter":{"title":"一个纯 CSS 实现的'简约'搜索框","author":"Jason Zeng","category":"CSS","cover":{"childImageSharp":{"resize":{"src":"/static/cb449dad650e791a0d33ed706aafc219/c83a6/photo-1491485880348-85d48a9e5312.jpg"}}}}},"authornote":{"id":"eeaf3f36-861e-5339-a4a4-e63a63ccd23c","html":"<p><a href=\"https://github.com/zenghongtu\">Jason Zeng</a></p>"},"site":{"siteMetadata":{"facebook":{"appId":"2349655921921608"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/一个纯 CSS 实现的'简约'搜索框/","prev":{"id":"8fed252b-5867-51a7-911f-2f95c4ca6830","fields":{"slug":"/CSS 核心知识点（持续更新）/","prefix":"2019-03-25","source":"posts"},"frontmatter":{"title":"CSS 核心知识点（持续更新）","category":"CSS"}},"next":{"id":"7535a9e0-93a5-5969-bba7-03b13a020054","fields":{"slug":"/一个有(gao)颜值的喜马拉雅 FM 客户端 - Mob 诞生记/","prefix":"2019-05-13","source":"posts"},"frontmatter":{"title":"一个有(gao)颜值的喜马拉雅 FM 客户端 - Mob 诞生记","category":"electron"}},"source":"posts"}}}