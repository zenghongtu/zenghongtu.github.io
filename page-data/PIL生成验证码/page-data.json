{"componentChunkName":"component---src-templates-post-template-js","path":"/PIL生成验证码/","webpackCompilationHash":"c350e791ebf0e69a7acf","result":{"data":{"post":{"id":"99bf69d6-7373-5a50-9b76-129feadbc6dc","html":"<p>PIL 生成验证码为了防止程序恶意请求，使用图片验证码是最常见的手段。</p>\n<ol>\n<li>PIL\nPIL 是一个非常强大的图像处理库，这里我们使用 PIL 来生成图片验证码安装 PIL</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">pip install Pillow</code></pre></div>\n<p>Windows 下可以直接到官网下载 exe 安装包</p>\n<ol start=\"2\">\n<li>绘制字符</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#随机生成RGB颜色</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">randcolor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">randcolor_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">127</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">127</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">127</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#随机生成1-20内的加减乘算数表达式，并绘制</span>\nsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">160</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\nfirstnum<span class=\"token operator\">=</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\nsecondnum<span class=\"token operator\">=</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\noperator<span class=\"token operator\">=</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token string\">'+-*'</span><span class=\"token punctuation\">)</span>\nverifystr<span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>firstnum<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>operator<span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>secondnum<span class=\"token punctuation\">)</span>\nresult<span class=\"token operator\">=</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>verifystr<span class=\"token punctuation\">)</span><span class=\"token comment\">#验证码结果</span>\nimg<span class=\"token operator\">=</span>Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndraw<span class=\"token operator\">=</span>ImageDraw<span class=\"token punctuation\">.</span>Draw<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\nfont<span class=\"token operator\">=</span>ImageFont<span class=\"token punctuation\">.</span>truetype<span class=\"token punctuation\">(</span><span class=\"token string\">'DejaVuSerif-Bold.ttf'</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span>\nverifystr<span class=\"token operator\">+=</span><span class=\"token string\">'=?'</span>\n<span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>verifystr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    draw<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">+</span><span class=\"token number\">20</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>text<span class=\"token operator\">=</span>verifystr<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>font<span class=\"token operator\">=</span>font<span class=\"token punctuation\">,</span>fill<span class=\"token operator\">=</span>randcolor_2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nimg<span class=\"token operator\">=</span>img<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>ImageFilter<span class=\"token punctuation\">.</span>CONTOUR<span class=\"token punctuation\">)</span><span class=\"token comment\">#模糊</span></code></pre></div>\n<ol start=\"3\">\n<li>绘制干扰线，干扰点</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">create_lines</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    line_num<span class=\"token operator\">=</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#干扰线数目</span>\n    <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>line_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        begin<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#起始点</span>\n        end<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#结束点</span>\n        draw<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>begin<span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>fill<span class=\"token operator\">=</span>randcolor_2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#绘制</span>\n    <span class=\"token keyword\">return</span> draw\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">create_points</span><span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    point_num<span class=\"token operator\">=</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#干扰点数目</span>\n    <span class=\"token keyword\">while</span> point_num<span class=\"token punctuation\">:</span>\n        w<span class=\"token operator\">=</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        h<span class=\"token operator\">=</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        draw<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>fill<span class=\"token operator\">=</span>randcolor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        point_num<span class=\"token operator\">-=</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> draw</code></pre></div>\n<ol start=\"4\">\n<li>在 Django 中加入验证码模块生成的验证码可以不用保存到本地再显示，这里我们使用 Python 的 io 模块</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> io <span class=\"token keyword\">import</span> BytesIO\n<span class=\"token keyword\">from</span> verify <span class=\"token keyword\">import</span> create_verifycode\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">verifycode</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    img<span class=\"token punctuation\">,</span>code<span class=\"token operator\">=</span>create_verifycode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#生成验证码</span>\n    mstream <span class=\"token operator\">=</span>BytesIO<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    request<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">[</span><span class=\"token string\">'verifycode'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>code<span class=\"token comment\">#将验证码的结果保存在session中，当用户提交时，与session中的结果比较</span>\n    img<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>mstream<span class=\"token punctuation\">,</span> <span class=\"token string\">\"jpeg\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span>mstream<span class=\"token punctuation\">.</span>getvalue<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>content_type<span class=\"token operator\">=</span><span class=\"token string\">\"image/jpeg\"</span><span class=\"token punctuation\">)</span></code></pre></div>","fields":{"slug":"/PIL生成验证码/","prefix":"2017-07-28"},"frontmatter":{"title":"PIL生成验证码","author":"Jason Zeng","category":"PIL","cover":{"childImageSharp":{"resize":{"src":"/static/bbd8bba995a0640aee399f2f29717410/c83a6/cat1.jpg"}}}}},"authornote":{"id":"eeaf3f36-861e-5339-a4a4-e63a63ccd23c","html":"<p><a href=\"https://github.com/zenghongtu\">Jason Zeng</a></p>"},"site":{"siteMetadata":{"facebook":{"appId":"2349655921921608"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/PIL生成验证码/","prev":{"id":"3aa72687-a7e4-5614-9f91-73980fca4458","fields":{"slug":"/ECS部署SS科学上网/","prefix":"2017-04-05","source":"posts"},"frontmatter":{"title":"ECS部署SS科学上网","category":"ss"}},"next":{"id":"dab9e6f3-6070-5638-a316-7db0ad54a1b8","fields":{"slug":"/Docker 简单使用/","prefix":"2017-11-25","source":"posts"},"frontmatter":{"title":"Docker 简单使用","category":"Docker"}},"source":"posts"}}}